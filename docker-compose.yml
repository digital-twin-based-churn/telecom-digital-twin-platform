version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: digital_twin_churn
    environment:
      POSTGRES_DB: churn_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=trust"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d churn_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/churn_db
      ML_SERVICE_URL: http://ml-service:8000
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      TAVILY_API_KEY: ${TAVILY_API_KEY:-}
    depends_on:
      - postgres
      - ml-service
    ports:
      - "8001:8001"
    restart: unless-stopped

  ml-service:
    build:
      context: .
      dockerfile: GYK-capstone-project/svc/Dockerfile
    container_name: ml-service
    environment:
      SPARK_LOCAL_IP: 127.0.0.1
      SPARK_DRIVER_MEM: 2g
      SPARK_EXECUTOR_MEM: 2g
    ports:
      - "8000:8000"
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8001}
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8080:80"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
